# Generated by Django 5.0.1 on 2025-04-06 00:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('student', 'Student'), ('teacher', 'Teacher'), ('guardian', 'Guardian'), ('accountant', 'Accountant'), ('admin', 'Admin')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('school_level', models.CharField(choices=[('Primary', 'Primary'), ('Secondary', 'Secondary')], default=None, max_length=20)),
                ('description', models.TextField()),
                ('order', models.PositiveIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('expense_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('audience', models.CharField(choices=[('all', 'All'), ('guardian', 'Guardians'), ('student', 'Students'), ('teacher', 'Teachers')], default='all', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expiry_date', models.DateField(blank=True, help_text='Leave blank if the notification should not expire.', null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='OnlineQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('SCQ', 'Single Choice Question'), ('MCQ', 'Multiple Choice Question'), ('ES', 'Essay Question')], max_length=3)),
                ('question_text', models.TextField()),
                ('options', models.JSONField(blank=True, null=True)),
                ('correct_answer', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_remarks', models.TextField(blank=True, null=True)),
                ('principal_remarks', models.TextField(blank=True, null=True)),
                ('attendance_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('punctuality', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('diligence', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('cooperation', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('respectfulness', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('sportsmanship', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('agility', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('creativity', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('hand_eye_coordination', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='guardian', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=1)),
                ('profile_image', models.ImageField(default='profile_images/default.jpg', upload_to='profile_images/')),
                ('contact', models.CharField(max_length=15, null=True)),
                ('address', models.TextField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('dormant', 'Dormant'), ('left', 'Left School')], default='active', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='student', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('LSA_number', models.CharField(max_length=20, null=True, unique=True)),
                ('profile_image', models.ImageField(default='profile_images/default.jpg', upload_to='profile_images/')),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('relationship', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('active', 'Active'), ('dormant', 'Dormant'), ('left', 'Left School')], default='active', max_length=10)),
                ('promotion_history', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='teacher', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('employee_id', models.CharField(max_length=20, null=True, unique=True)),
                ('profile_image', models.ImageField(default='profile_images/default.jpg', upload_to='profile_images/')),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=1)),
                ('contact', models.CharField(max_length=15, null=True)),
                ('address', models.TextField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('dormant', 'Dormant'), ('left', 'Left School')], default='active', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('due_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=True)),
                ('class_assigned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='core.class')),
            ],
        ),
        migrations.CreateModel(
            name='EmailCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipients', models.ManyToManyField(related_name='email_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('SCQ', 'Single Choice Question'), ('MCQ', 'Multiple Choice Question'), ('ES', 'Essay Question')], max_length=3)),
                ('question_text', models.TextField()),
                ('options', models.JSONField(blank=True, null=True)),
                ('correct_answer', models.CharField(blank=True, max_length=255, null=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.assignment')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('subject_weight', models.IntegerField(default=2)),
                ('classes', models.ManyToManyField(default=None, related_name='subjects_set', to='core.class')),
                ('students', models.ManyToManyField(default=None, related_name='subjects', to='core.student')),
            ],
        ),
        migrations.AddField(
            model_name='class',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='class_set', to='core.subject'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subject'),
        ),
        migrations.CreateModel(
            name='SubjectResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('continuous_assessment_1', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MaxValueValidator(10.0)])),
                ('continuous_assessment_2', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MaxValueValidator(10.0)])),
                ('continuous_assessment_3', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MaxValueValidator(10.0)])),
                ('assignment', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MaxValueValidator(10.0)])),
                ('oral_test', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MaxValueValidator(20.0)])),
                ('exam_score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MaxValueValidator(40.0)])),
                ('is_finalized', models.BooleanField(default=False)),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.result')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subject')),
            ],
        ),
        migrations.AddField(
            model_name='result',
            name='subjects',
            field=models.ManyToManyField(through='core.SubjectResult', to='core.subject'),
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('First Term', 'First'), ('Second Term', 'Second'), ('Third Term', 'Third')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms', to='core.session')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.term')),
            ],
        ),
        migrations.AddField(
            model_name='result',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.term'),
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.term')),
            ],
        ),
        migrations.CreateModel(
            name='FinancialRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_discount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('outstanding_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('archived', models.BooleanField(default=False)),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.term')),
            ],
        ),
        migrations.CreateModel(
            name='FeeAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('class_instance', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.class')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.term')),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True)),
                ('short_description', models.CharField(blank=True, max_length=500, null=True)),
                ('score', models.IntegerField(blank=True, default=0, null=True)),
                ('is_online', models.BooleanField(default=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_exams', to=settings.AUTH_USER_MODEL)),
                ('class_assigned', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.class')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_exams', to=settings.AUTH_USER_MODEL)),
                ('questions', models.ManyToManyField(blank=True, related_name='exams', to='core.onlinequestion')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subject')),
                ('term', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='core.term')),
            ],
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True)),
                ('short_description', models.CharField(blank=True, max_length=500, null=True)),
                ('score', models.IntegerField(blank=True, default=0, null=True)),
                ('is_online', models.BooleanField(default=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_assessments', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_assessments', to=settings.AUTH_USER_MODEL)),
                ('class_assigned', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.class')),
                ('questions', models.ManyToManyField(blank=True, related_name='assessments', to='core.onlinequestion')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subject')),
                ('term', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='core.term')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFeeRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('waiver', models.BooleanField(default=False)),
                ('net_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fee_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.feeassignment')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.term')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='current_class',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='enrolled_students', to='core.class'),
        ),
        migrations.AddField(
            model_name='student',
            name='student_guardian',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='core.guardian'),
        ),
        migrations.AddField(
            model_name='result',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField(default=django.utils.timezone.now)),
                ('financial_record', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.financialrecord')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.term')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_unread', models.BooleanField(default=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='core.student')),
            ],
        ),
        migrations.AddField(
            model_name='financialrecord',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student'),
        ),
        migrations.CreateModel(
            name='ExamSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answers', models.JSONField()),
                ('score', models.IntegerField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_graded', models.BooleanField(default=False)),
                ('requires_manual_review', models.BooleanField(default=False)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('class_enrolled', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.class')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.session')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.term')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='core.student')),
            ],
        ),
        migrations.AddField(
            model_name='class',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='classes', to='core.student'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('is_present', models.BooleanField(default=False)),
                ('class_assigned', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.class')),
                ('term', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.term')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('answers', models.JSONField()),
                ('grade', models.FloatField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='core.assignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answers', models.JSONField()),
                ('score', models.IntegerField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_graded', models.BooleanField(default=False)),
                ('requires_manual_review', models.BooleanField(default=False)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.assessment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_form_teacher', models.BooleanField(default=False)),
                ('class_assigned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.class')),
                ('session', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.session')),
                ('term', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.term')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_assigned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.class')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.session')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subject')),
                ('term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.term')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.teacher')),
            ],
        ),
        migrations.AddField(
            model_name='assignment',
            name='teacher',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='core.teacher'),
        ),
        migrations.CreateModel(
            name='AcademicAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('assignment', 'Assignment'), ('assessment', 'Assessment'), ('exam', 'Exam')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField()),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('is_done', models.BooleanField(default=False)),
                ('date_submitted', models.DateTimeField(blank=True, null=True)),
                ('total_grade', models.FloatField(blank=True, null=True)),
                ('related_object_id', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_alerts', to='core.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts_sent', to='core.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='ClassSubjectAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_assigned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_assignments', to='core.class')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.session')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_assignments', to='core.subject')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.term')),
            ],
            options={
                'unique_together': {('class_assigned', 'subject', 'session', 'term')},
            },
        ),
        migrations.AddConstraint(
            model_name='financialrecord',
            constraint=models.CheckConstraint(check=models.Q(('total_fee__gte', 0)), name='positive_total_fee'),
        ),
        migrations.AddConstraint(
            model_name='financialrecord',
            constraint=models.CheckConstraint(check=models.Q(('total_paid__gte', 0)), name='positive_total_paid'),
        ),
        migrations.AlterUniqueTogether(
            name='financialrecord',
            unique_together={('student', 'term')},
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('student', 'date', 'class_assigned', 'term')},
        ),
        migrations.AlterUniqueTogether(
            name='teacherassignment',
            unique_together={('class_assigned', 'teacher', 'session', 'term', 'is_form_teacher')},
        ),
        migrations.AlterUniqueTogether(
            name='subjectassignment',
            unique_together={('class_assigned', 'subject', 'teacher', 'term', 'session')},
        ),
    ]
